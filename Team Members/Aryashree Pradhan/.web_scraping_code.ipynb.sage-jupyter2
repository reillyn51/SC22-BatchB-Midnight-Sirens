{"backend_state":"init","connection_file":"/projects/07cb54a4-9729-4508-ad4f-95fc7891551c/.local/share/jupyter/runtime/kernel-56ec6282-a2b5-42d2-9cbe-64002ea1bbb6.json","kernel":"cv_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","end":1656688101947,"exec_count":1,"id":"df7b88","input":"import os, json  # json for pretty output\nfrom serpapi import GoogleSearch\nimport requests\n\ndef get_google_images():\n    params = {\n        \"api_key\": \"SERPAPI_KEY\",\n        \"engine\": \"google\",\n        \"q\": \"Cat\",\n        \"tbm\": \"isch\",\n        \"ijn\": 0\n    }\n\n    search = GoogleSearch(params)\n    results = search.get_dict()\n\n    # print(json.dumps(results['suggested_searches'], indent=2, ensure_ascii=False))\n    print(json.dumps(results[\"images_results\"], indent=2, ensure_ascii=False))\n    # save files to /SerpApi_Images/ if it doesn't exist create the folder\n    if not os.path.exists(\"./SerpApi_Images/\"):\n        os.makedirs(\"./SerpApi_Images/\")\n\n    # -----------------------\n    # Downloading images\n    headers = {\n        \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\"}\n\n    for index, image in enumerate(results[\"images_results\"]):\n\n        try:\n            print(f\"Downloading {index} image...\")\n\n            # filepath is current working directory + SerpApi_Images + params[\"q\"] + index + .jpg\n            filepath = os.path.join(\"./SerpApi_Images/\", params[\"q\"] + str(index) + \".jpg\")\n\n            response = requests.get(image['original'], headers=headers).content\n            with open(filepath, \"wb\") as f:\n                f.write(response)\n\n        except Exception as e:\n            print(e)\n            print(f\"Error downloading {index} image. Error =\", e)\n\nget_google_images()","kernel":"cv_env","output":{"0":{"name":"stdout","text":"https://serpapi.com/search\n"},"1":{"ename":"KeyError","evalue":"'images_results'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 44>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     41\u001b[0m             \u001b[38;5;28mprint\u001b[39m(e)\n\u001b[1;32m     42\u001b[0m             \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mError downloading \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mindex\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m image. Error =\u001b[39m\u001b[38;5;124m\"\u001b[39m, e)\n\u001b[0;32m---> 44\u001b[0m \u001b[43mget_google_images\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n","Input \u001b[0;32mIn [1]\u001b[0m, in \u001b[0;36mget_google_images\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m results \u001b[38;5;241m=\u001b[39m search\u001b[38;5;241m.\u001b[39mget_dict()\n\u001b[1;32m     17\u001b[0m \u001b[38;5;66;03m# print(json.dumps(results['suggested_searches'], indent=2, ensure_ascii=False))\u001b[39;00m\n\u001b[0;32m---> 18\u001b[0m \u001b[38;5;28mprint\u001b[39m(json\u001b[38;5;241m.\u001b[39mdumps(\u001b[43mresults\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mimages_results\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m, indent\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m2\u001b[39m, ensure_ascii\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m))\n\u001b[1;32m     19\u001b[0m \u001b[38;5;66;03m# save files to /SerpApi_Images/ if it doesn't exist create the folder\u001b[39;00m\n\u001b[1;32m     20\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mexists(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m./SerpApi_Images/\u001b[39m\u001b[38;5;124m\"\u001b[39m):\n","\u001b[0;31mKeyError\u001b[0m: 'images_results'"]}},"pos":0,"start":1656688101147,"state":"done","type":"cell"}
{"id":"d88ef4","input":"","pos":1,"type":"cell"}
{"id":0,"time":1656688094709,"type":"user"}
{"last_load":1656688097410,"type":"file"}